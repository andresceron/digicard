version: 2.1

slack-fail-post-step: &slack-fail-post-step
  post-steps:
  - slack/notify:
      event: fail
      custom: |
        {
          "attachments": [
            {
              "color": "#e73538",
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "❌ *SOCIALAR*: #${CIRCLE_BUILD_NUM}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project*: `${CIRCLE_PROJECT_REPONAME}`"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*: `${CIRCLE_BRANCH}`"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Job*: `${CIRCLE_JOB}`"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }
          ]
        }

slack-pass-post-step: &slack-pass-post-step
  post-steps:
  - slack/notify:
      event: pass
      custom: |
        {
          "attachments": [
            {
              "color": "#0fb471",
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "✅ *SOCIALAR*: #${CIRCLE_BUILD_NUM}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project*: `${CIRCLE_PROJECT_REPONAME}`"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*: `${CIRCLE_BRANCH}`"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Job*: `${CIRCLE_JOB}`"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "http://www.google.com"
                    }
                  ]
                }
              ]
            }
          ]
        }
  - slack/notify:
      event: fail
      custom: |
        {
          "attachments": [
            {
              "color": "#e73538",
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "❌ *SOCIALAR*: #${CIRCLE_BUILD_NUM}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project*: `${CIRCLE_PROJECT_REPONAME}`"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*: `${CIRCLE_BRANCH}`"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Job*: `${CIRCLE_JOB}`"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }
          ]
        }


orbs:
  # heroku: circleci/heroku@1.2.3
  slack: circleci/slack@4.1.3

jobs:
  server_lint_test_build:
    working_directory: ~/digicard
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-server-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-server-dependencies-
      - run:
          name: server npm install
          command: npm install;
      - save_cache:
          key: v1-server-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: server lint
          command: cd ./server; xvfb-run -a npm run lint
      - run:
          name: server test
          command: cd ./server; xvfb-run -a npm run test
      - run:
          name: server build
          command: cd ./server;

  ui_lint_test_build:
    working_directory: ~/digicard
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ui-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-ui-dependencies-
      - run:
          name: ui npm install
          command: cd ./ui && npm install;
      - save_cache:
          key: v1-ui-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ./ui/node_modules
      - run:
          name: ui lint
          command: cd ./ui; xvfb-run -a npm run lint
      - run:
          name: ui test
          command: cd ./ui; xvfb-run -a npm run test -- --watch=false --progress=false --browsers=ChromeNoSandbox
      - run:
          name: ui build
          command: cd ./ui; xvfb-run -a npm run build

  # deploy_heroku_prod:
  #   executor: heroku/default
  #   steps:
  #     - checkout
  #     - heroku/install
  #     - heroku/deploy-via-git

  deploy_ionos:
    docker:
      - image: circleci/php:7.3-stretch-node-browsers
    steps:
      - run: sudo apt update && sudo apt install git -y && git --version

      # Update environment
      - run: sudo apt update

      # Install rsync. It will be used to upload our code to server
      - run: sudo apt-get install rsync

      # Sync the SSH keys 
      - add_ssh_keys

      # Check out the code in the project directory
      - checkout
      # Add the server to known hosts
      - run: ssh-keyscan -H 82.223.121.127 >> ~/.ssh/known_hosts

      # Finally, upload your files to server.
      - run: rsync -avce ssh --delete ./dist/ root@82.223.121.127:/

  # deploy_heroku_test:
    # executor: heroku/default
    # steps:
      # - checkout
      # - heroku/install
      # - heroku/deploy-via-git

workflows:
  default:
    jobs:
      - server_lint_test_build:
         context: slack-secrets
         <<: *slack-fail-post-step
      - ui_lint_test_build:
          requires:
            - server_lint_test_build
          context: slack-secrets
          <<: *slack-fail-post-step
      # - deploy_heroku_prod:
      #     context: [slack-secrets]
      #     requires:
      #       - server_lint_test_build
      #       - ui_lint_test_build
      #     <<: [
      #       *slack-fail-post-step,
      #       *slack-pass-post-step
      #     ]
      #     filters:
      #       branches:
      #         only:
      #           - main
      - deploy_ionos:
          context: [slack-secrets]
          <<: *slack-pass-post-step
          filters:
            branches:
              only:
                - /DIG-.*/
      # - deploy_heroku_test:
      #     context: [slack-secrets]
      #     <<: *slack-pass-post-step
      #     filters:
      #       branches:
      #         only:
      #           - /DIG-.*/
