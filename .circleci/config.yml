version: 2.1

orbs:
  heroku: circleci/heroku@1.2.3
  slack: circleci/slack@4.1.2

jobs:
  server_lint_test_build:
    working_directory: ~/digicard
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-server-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-server-dependencies-
      - run:
          name: server npm install
          command: npm install;
      - save_cache:
          key: v1-server-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: server lint
          command: cd ./server; xvfb-run -a npm run lint
      - run:
          name: server test
          command: cd ./server; xvfb-run -a npm run test
      - run:
          name: server build
          command: cd ./server; xvfb-run -a tsc

  ui_lint_test_build:
    working_directory: ~/digicard
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ui-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-ui-dependencies-
      - run:
          name: ui npm install
          command: cd ./ui && npm install;
      - save_cache:
          key: v1-ui-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ./ui/node_modules
      - run:
          name: ui lint
          command: cd ./ui; xvfb-run -a npm run lint
      - run:
          name: ui test
          command: cd ./ui; xvfb-run -a npm run test
      - run:
          name: ui build
          command: cd ./ui; xvfb-run -a npm run build

  deploy_heroku:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git

workflows:
  default:
    jobs:
      - server_lint_test_build # your custom job from your config, that builds your code
      - ui_lint_test_build: # your custom job; runs test suite 1
          requires: # test1 will not run until the `build` job is completed.
            - server_lint_test_build
      - deploy_heroku: # another custom job; runs test suite 2,
          requires: # test2 is dependent on the success of job `test1`
            - server_lint_test_build
            - ui_lint_test_build


# orbs:
#   heroku: circleci/heroku@1.2.3
#   slack: circleci/slack@4.1.2
#   node: circleci/node@4.1.0
# workflows:
#   heroku_deploy:
#     jobs:
#       - heroku/deploy-via-git

  # lint:
  #   jobs:
  #     - checkout
  #     - run:
  #         name: __SERVER__
  #         command: pwd
  #     - restore_cache:
  #         keys:
  #           - v1-server-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
  #           - v1-server-dependencies-
  #     - run:
  #         name: npm install (server)
  #         command: npm install;
  #     - save_cache:
  #         key: v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
  #         paths:
  #           - ./node_modules
      # - run:
      #     name: npm run lint
      #     command: cd ./www/server; xvfb-run -a npm run lint

# version: 2.1
# jobs:
#   build:
#     docker:
#       - image: circleci/ruby:2.4-node # primary container - where job steps are run
#         auth:
#           username: mydockerhub-user
#           password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
#       - image: circleci/postgres:9.4.12-alpine # services container
#         auth:
#           username: mydockerhub-user
#           password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
#     working_directory: ~/circleci-demo-workflows
#     steps:
#       - checkout
#       # Bundle install dependencies
#       - run: bundle install --path vendor/bundle

#       # Database setup
#       - run: bundle exec rake db:create db:schema:load

#       - run:
#           name: Run tests
#           command: rake

#   deploy:
#     machine:
#         enabled: true
#     working_directory: ~/circleci-demo-workflows
#     environment:
#       HEROKU_APP: "sleepy-refuge-55486" # define env var $HEROKU_APP
#     steps:
#       - checkout
#       - run:
#           name: Setup Heroku
#           command: bash .circleci/setup-heroku.sh # run a script to set up Heroku

#       - run:
#           command: |
#             git push heroku sequential-branch-filter:master
#             heroku run rake db:migrate
#             sleep 5 # sleep for 5 seconds to wait for dynos
#             heroku restart

# workflows:
#   version: 2
#   build-and-deploy:
#     jobs:
#       - build
#       - deploy:
#           requires:
#             - build
#           filters:
#             branches:
#               only: sequential-branch-filter


# orbs:
#   heroku: circleci/heroku@0.0.10
# workflows:
#   heroku_deploy:
#     jobs:
#       - heroku/deploy-via-git

#   build:
#     working_directory: ~/digicard
#     docker:
#       - image: circleci/node:10-browsers
#     steps:
#       - checkout
#       - run:
#           name: __SERVER__
#           command: pwd
#       - restore_cache:
#           keys:
#             - v1-server-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
#             - v1-server-dependencies-
#       - run:
#           name: npm install (server)
#           command: npm install;
#       - save_cache:
#           key: v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
#           paths:
#             - ./node_modules
#       # - run:
#       #     name: npm run lint
#       #     command: cd ./www/server; xvfb-run -a npm run lint
#       # - run:
#       #     name: npm run test
#       #     command: cd ./www/server; xvfb-run -a npm run test
#       # - run: ??? is this needed
#       #     name: Start pm2 server
#       #     command: npm run pm2
#       - run:
#           name: __UI__
#           command: pwd
#       - restore_cache:
#           keys:
#             - v1-ui-dependencies-{{ .Branch }}-{{ checksum "./www/ui/package.json" }}
#             - v1-ui-dependencies-
#       - run:
#           name: npm install (ui)
#           command: cd ./www/ui; npm install;
#       - save_cache:
#           key: v1-dependencies-{{ .Branch }}-{{ checksum "./www/ui/package.json" }}
#           paths:
#             - ./www/ui/node_modules
#       - run:
#           name: npm run lint
#           command: cd ./www/ui; xvfb-run -a npm run lint
#       - run:
#           name: npm run test
#           command: cd ./www/ui; xvfb-run -a npm run test -- --watch=false --progress=false --browsers=ChromeNoSandbox
#       # - run:
#       #     name: ng e2e
#       #     command: cd ./ui; xvfb-run -a npm run e2e -- --protractorConfig=e2e/protractor-ci.conf.js

# # workflows:
# #   build:
# #     jobs:
# #       - bar:
# #           pre-steps: # steps to run before steps defined in the job bar
# #             - run:
# #                 command: cd ./ui
